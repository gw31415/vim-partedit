*partedit.txt*	Edits part of buffer by another buffer.

Version: 1.2
Author : thinca <thinca+vim@gmail.com>
License: zlib License

==============================================================================
CONTENTS					*partedit-contents*

INTRODUCTION			|partedit-introduction|
INTERFACE			|partedit-interface|
  COMMANDS			  |partedit-commands|
  FUNCTIONS			  |partedit-functions|
LIMITATION			|partedit-limitation|
CHANGELOG			|partedit-changelog|


==============================================================================
INTRODUCTION					*partedit-introduction*

*partedit* is a Vim plugin to edit a part of a buffer with another buffer.
You can start to edit a part of the buffer with |:Partedit|.  And you can
apply the changes by saving the buffer.



==============================================================================
INTERFACE					*partedit-interface*

------------------------------------------------------------------------------
COMMANDS					*partedit-commands*

:[range]Partedit [options]...			*:Partedit*
:[range]Partedit [opener]
	Starts editing a part of a buffer.  [range] of default is current
	line.
	[options] is pair of -option-name and value, such as following. >

	:Partedit -opener new -filetype vim -prefix "> "
<
	If the argument is not started with "-", it is [opener].

:ParteditEnd					*:ParteditEnd*
	This is available in the partedit buffer.
	Opens the original buffer in current window.

------------------------------------------------------------------------------
FUNCTIONS					*partedit-functions*

						*partedit#start()*
partedit#start({startline}, {endline} [, {options}])
	Function version of |:Partedit|.
	{options} is a |Dictionary| which contains the following items:

	"opener"
		Overwrites |g:partedit#opener| and |b:partedit_opener|.
	"prefix"
		Overwrites |g:partedit#prefix| and |b:partedit_prefix|.
	"filetype"
		Overwrites |g:partedit#filetype| and |b:partedit_filetype|.
	"auto_prefix"
		Overwrites |g:partedit#auto_prefix| and
		|b:partedit_auto_prefix|.



==============================================================================
CUSTOMIZING					*partedit-customizing*

g:partedit#opener				*g:partedit#opener*
b:partedit_opener				*b:partedit_opener*
	The partedit buffer is opened by this command such as |:new|,
	|:vsplit|, and so on.  If omitted, |:edit| is used.
	If the value is starts with "=", it is treated as |expr|, and result
	is a opener.

g:partedit#prefix				*g:partedit#prefix*
b:partedit_prefix				*b:partedit_prefix*
	If this value is not empty, and each lines start with this string,
	this plugin removes common prefix on partedit buffer.
	The prefix is restored on original buffer.
	The blank of the end of a prefix is adjusted by good taste.
>
	let b:partedit_prefix = '> '

	=== original buffer ===
	> This is a sample text.
	>
	> Upper line has prefix ">", not "> ". But this is OK.

	=== partedit buffer ===
	This is a sample text.
	
	Upper line has prefix ">", not "> ". But this is OK.

		| edit
		v
	=== partedit buffer ===
	This is a sample text.
	
	Upper line has prefix ">", not "> ". But this is OK.
	
	All texts are restored with "> " prefix,
	but blank of the end of empty line is removed.

	=== original buffer ===
	> This is a sample text.
	>
	> Upper line has prefix ">", not "> ". But this is OK.
	>
	> All texts are restored with "> " prefix,
	> but blank of the end of empty line is removed.

g:partedit#prefix_pattern			*g:partedit#prefix_pattern*
b:partedit_prefix_pattern			*b:partedit_prefix_pattern*
	Similar to |b:partedit_prefix|, but this option can be specified by a
	regex.  If this value is not empty, the common prefix of range that
	matches the specified regex is treated as prefix.  With this option
	set, |b:partedit_prefix| and |b:partedit_auto_prefix| are ignored.
	The longest common string satisfying the given regex is treated as a
	prefix, and it is restored to the original buffer after editing the
	partedit buffer.
>
	let b:partedit_prefix = '\v\s*//[/!]?\s*'

	=== original buffer ===
	// This is a sample comment.
	//
	// Upper line has prefix "//", not "// ". But this is OK.

	=== partedit buffer ===
	This is a sample comment.
	
	Upper line has prefix "//", not "// ". But this is OK.

		| edit
		v
	=== partedit buffer ===
	This is a sample text.
	
	Upper line has prefix "//", not "// ". But this is OK.
	
	All texts are restored with "// " prefix,
	but blank of the end of empty line is removed.

	=== original buffer ===
	// This is a sample text.
	//
	// Upper line has prefix "//", not "// ". But this is OK.
	//
	// All texts are restored with "// " prefix,
	// but blank of the end of empty line is removed.

	=== original buffer ===
	//! This is a sample documentation text.
	//!
	//! Upper line has prefix "//!", not "//! ". But this is OK.

	=== partedit buffer ===
	This is a sample documentation text.
	
	Upper line has prefix "//!", not "//! ". But this is OK.

		| edit
		v
	=== partedit buffer ===
	This is a sample documentation text.
	
	Upper line has prefix "//!", not "//! ". But this is OK.
	
	All texts are restored with "//! " prefix,
	but blank of the end of empty line is removed.

	=== original buffer ===
	//! This is a sample documentation text.
	//!
	//! Upper line has prefix "//!", not "//! ". But this is OK.
	//!
	//! All texts are restored with "//! " prefix,
	//! but blank of the end of empty line is removed.


g:partedit#filetype				*g:partedit#filetype*
b:partedit_filetype				*b:partedit_filetype*
	If this variable exists, 'filetype' of newly opened partedit buffer
	becomes this value.

g:partedit#auto_prefix				*g:partedit#auto_prefix*
b:partedit_auto_prefix				*b:partedit_auto_prefix*
	If this is true, and both |b:partedit_prefix| and
	|b:partedit_prefix_pattern| are empty, the common prefix of range is
	treated as prefix.  The default value is true.



==============================================================================
LIMITATION					*partedit-limitation*

- If you edit the original buffer, it will be not likely to be able to apply
  well.



==============================================================================
CHANGELOG					*partedit-changelog*

1.2	2012-11-27
	- Use same 'fileencoding' and 'fileformat' in partedit buffer.
	- `:Partedit [opener]` support.

1.1	2012-10-19
	- Add `prefix` feature.
	- Add some options.
	  - |g:partedit#opener| |b:partedit_opener|
	  - |g:partedit#prefix| |b:partedit_prefix|
	  - |g:partedit#filetype| |b:partedit_filetype|
	  - |g:partedit#auto_prefix| |b:partedit_auto_prefix|
	- Add |:ParteditEnd| command.
	- Change the argument of |:Partedit|.

1.0	2011-11-12
	- Initial version.


==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
